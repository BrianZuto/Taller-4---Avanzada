version: '3.8'

services:
  # Base de datos MySQL
  mysql:
    image: mysql:8.0
    container_name: inventpro-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - inventpro-network
    restart: unless-stopped

  # Backend Spring Boot
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: inventpro-backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/${DB_NAME}?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.MySQL8Dialect
      SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: "true"
      SERVER_PORT: 8080
      SPRING_WEB_CORS_ALLOWED_ORIGINS: "http://localhost:4200,http://13.61.142.123,http://localhost"
      SPRING_WEB_CORS_ALLOWED_METHODS: "GET,POST,PUT,DELETE,OPTIONS"
      SPRING_WEB_CORS_ALLOWED_HEADERS: "*"
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: 86400000
    ports:
      - "8080:8080"
    depends_on:
      - mysql
    networks:
      - inventpro-network
    restart: unless-stopped

  # Frontend Angular con Nginx
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: inventpro-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - inventpro-network
    restart: unless-stopped

volumes:
  mysql_data:

networks:
  inventpro-network:
    driver: bridge
